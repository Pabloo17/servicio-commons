1: Crear servidor de configuracion con la dependencia spring cloud config server
2: en la clase principal añadir la etiqueta @EnableConfigServer
3: Añadir fichero {nombre del servicio}.properties ejemplo: servicio-items.properties, se puede añadir el entorno con un - ejem: servicio-items-dev.properties
4: en el servicio que queramos que lea la config de aqui, añadir dependencia spring cloud starter config
5: en el servicio que queramos que lea la config crear fichero bootstrap.properties, que se lee antes que el application.properties y lo sobreescribe
6: para probar, se accede a la url:puerto/nombre_del_fichero_sin_properties ejem:localhost:8888/servicio-items y el entorno con / ejem: localhost:8888/servicio-items/dev

PARA ACTUALIZAR EN TIEMPO REAL LAS PROPIEDADES:
1:Añadir etiqueta @RefreshScope en la clase que contiene el endpoint del cliente
2:Añadir dependencia Actuator que esta en la carpeta OPS
3:Añadir propiedad al bootstrap.properties: management.endpoints.web.exposure.include=*
4:Cambiar los valores de un fichero de config y hacer PUSH

PARA PROBAR: llamar a actuator para que actualice los valores: localhost:8005/actuator/refresh (POST) (CREADO AUTOMATICAMENTE AL AÑADIR LAS DEPENDENCIAS)
DESPUES VOLVER A HACER LA CONSULTA